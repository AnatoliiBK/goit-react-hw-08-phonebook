{"version":3,"file":"static/js/269.0733229d.chunk.js","mappings":"iRAIaA,GAAgBC,EAAAA,EAAAA,IAC3B,oBAD2C,mCAE3C,WAAOC,EAAP,uFAAYC,EAAZ,EAAYA,SAAZ,EAAsBC,SAEpBC,QAAQC,IAAI,MAAOH,KAFrB,SAIyBI,EAAAA,EAAAA,IAAU,wDAJnC,cAIQC,EAJR,OAKQC,EAAkBD,EAASE,KAEjCL,QAAQC,IAAI,QAASG,GAEfE,EAAiBF,EAAgBG,QAAO,SAACC,EAAKC,GAKlD,OAJwBD,EAAIE,MAAK,SAACC,GAAD,OAAOA,EAAEC,SAAWH,EAAQG,MAA5B,KAE/BJ,EAAIK,KAAKJ,GAEJD,CACR,GAAE,IAfL,kBAiBSF,GAjBT,2CAF2C,yDAwBhCQ,GAAalB,EAAAA,EAAAA,IACxB,sBADwC,mCAExC,WAAOmB,EAAP,uFAAqBjB,EAArB,EAAqBA,SACbkB,GAAcC,EAAAA,EAAAA,GAA2BF,EAAWH,OAAQ,MAClEG,EAAWH,OAASI,EAAYE,sBAE1BC,EAAQrB,IASRsB,EAAwBD,EAAME,SAASC,MAAMZ,MACjD,SAACD,GAAD,OAAaA,EAAQG,SAAWG,EAAWH,MAA3C,IAEIW,EAAsBJ,EAAME,SAASC,MAAMZ,MAC/C,SAACD,GAAD,OAAaA,EAAQe,OAAST,EAAWS,IAAzC,KAGEJ,EApBN,sBAqBIK,MAAM,6BAAD,OAA8BV,EAAWH,OAAzC,qBACC,IAAIc,MAAJ,oCAAuCX,EAAWH,OAAlD,qBAtBV,WAyBMW,EAzBN,uBA0BIE,MAAM,qBAAD,OAAsBV,EAAWS,KAAjC,qBACC,IAAIE,MAAJ,4BAA+BX,EAAWS,KAA1C,qBA3BV,yBA+ByBtB,EAAAA,EAAAA,KAAW,uDAAwDa,GA/B5F,eA+BQZ,EA/BR,OAiCEH,QAAQC,IAAI,MAAOE,EAASE,MAjC9B,kBAmCSF,EAASE,MAnClB,4CAFwC,yDA0C7BsB,GAAgB/B,EAAAA,EAAAA,IAC3B,yBAD2C,mCAG3C,WAAOgC,EAAWC,GAAlB,gGAE2B3B,EAAAA,EAAAA,OAAA,+DAAqE0B,IAFhG,cAEUzB,EAFV,OAGIH,QAAQC,IAAI,OAAQE,EAASE,KAAKyB,GAAIF,GAH1C,kBAIWzB,EAASE,KAAKyB,IAJzB,uCAOI9B,QAAQC,IAAI,8CAPhB,kBAQW4B,EAASE,gBAAgB,KAAEC,UARtC,yDAH2C,yDAgBvCC,EAAeC,OAAOC,OAAO,CACjCd,SAAU,CACRC,MAAO,GACPc,WAAW,EACXC,MAAO,MAETC,OAAQ,KAGJC,GAAgBC,EAAAA,EAAAA,IAAY,CAChChB,KAAM,WACNS,aAAAA,EACAQ,SAAU,CACRC,UAAW,SAACvB,EAAOwB,GACjBxB,EAAMmB,OAASK,EAAOC,OACvB,GAEHC,cAAe,SAACC,GACdA,EACGC,QAAQpD,EAAcqD,SAAS,SAAC7B,GAC/BA,EAAME,SAASe,WAAY,EAC3BjB,EAAME,SAASgB,MAAQ,IACxB,IACAU,QAAQpD,EAAcsD,WAAW,SAAC9B,EAAOwB,GACxCxB,EAAME,SAASe,WAAY,EAC3BjB,EAAME,SAASC,MAAQqB,EAAOC,OAC/B,IACAG,QAAQpD,EAAcuD,UAAU,SAAC/B,EAAOwB,GACvCxB,EAAME,SAASe,WAAY,EAC3BjB,EAAME,SAASgB,MAAQM,EAAON,MAAML,OACrC,IACAe,QAAQjC,EAAWkC,SAAS,SAAC7B,GAC5BA,EAAME,SAASe,WAAY,EAC3BjB,EAAME,SAASgB,MAAQ,IACxB,IACAU,QAAQjC,EAAWmC,WAAW,SAAC9B,EAAOwB,GACrCxB,EAAME,SAASe,WAAY,EAC3BjB,EAAME,SAASC,MAAMT,KAAK8B,EAAOC,QAElC,IACAG,QAAQjC,EAAWoC,UAAU,SAAC/B,EAAOwB,GACpCxB,EAAME,SAASe,WAAY,EAC3BjB,EAAME,SAASgB,MAAQM,EAAON,MAAML,OACrC,IACAe,QAAQpB,EAAcqB,SAAS,SAAC7B,GAC/BA,EAAME,SAASe,WAAY,EAC3BjB,EAAME,SAASgB,MAAQ,IACxB,IACAU,QAAQpB,EAAcsB,WAAW,SAAC9B,EAAOwB,GACxCxB,EAAME,SAASe,WAAY,EAC3BjB,EAAME,SAASC,MAAQH,EAAME,SAASC,MAAMgB,QAAO,SAAC7B,GAAD,OAAaA,EAAQqB,KAAOa,EAAOC,OAAnC,GACpD,IACAG,QAAQpB,EAAcuB,UAAU,SAAC/B,EAAOwB,GACvCxB,EAAME,SAASe,WAAY,EAC3BjB,EAAME,SAASgB,MAAQM,EAAON,MAAML,OACrC,GACJ,IAGYU,EAAcH,EAAcY,QAA5BT,UCjJFU,GDmJEb,EAAf,QCnJyB,CACrBc,QAAS,OACTC,cAAe,SACfC,OAAQ,OACRC,WAAY,SAGHC,EAAa,CACtBJ,QAAS,OACTC,cAAe,SACfC,OAAQ,OACRG,WAAY,MACZC,SAAU,OACVC,MAAO,SAGEC,EAAa,CACtBC,OAAQ,OACRF,MAAO,QACPD,SAAU,OACVI,QAAS,YAGAC,EAAc,CACvBJ,MAAO,QACPG,QAAS,MACTL,WAAY,MACZC,SAAU,QAGDM,EAAc,CACvBN,SAAU,OACVI,QAAS,WACTP,WAAY,QACZU,YAAa,KAGJC,EAAY,CACrBR,SAAU,OACVS,aAAc,kBACdC,YAAa,IACbC,cAAe,OAGNC,EAAY,CACrBf,WAAY,OACZgB,WAAY,QAGHhD,EAAO,CAChBiD,cAAe,cAGNC,EAAO,CAChBH,UAAW,OACXF,YAAa,MACbT,MAAO,S,SClDEe,EAAS,WACpB,IAAM5E,GAAW6E,EAAAA,EAAAA,MAOjB,OACE,mBAAOC,MAAOpB,EAAd,mCAEE,kBACEqB,KAAK,OACLtD,KAAK,SACLuD,SAXe,SAACC,GACpB,IAAMC,EAAcD,EAAEE,OAAOC,MAC7BpF,EAAS2C,EAAUuC,GACpB,EASKJ,MAAOhB,MAId,ECnBYuB,EAAc,SAAC,GAAiB,IAAf3E,EAAc,EAAdA,QACtBV,GAAW6E,EAAAA,EAAAA,MAEXS,EAAY,mCAAG,uGAEXnF,EAAAA,EAAAA,IAAA,+DAAkEO,EAAQqB,KAF/D,OAGjB/B,EAAS4B,EAAclB,EAAQqB,KAC/B9B,QAAQC,IAAI,yDAAaQ,EAASA,EAAQqB,IAJzB,gDAMjB9B,QAAQqC,MAAM,6CAAd,MANiB,yDAAH,qDAUlB,OACE,gBAAIwC,MAAOV,EAAX,WACE,eAAGU,MAAOrD,EAAV,UAAiBf,EAAQe,KAAzB,QACEf,EAAQG,QACV,mBAAQ0E,QAASD,EAAcR,MAAOZ,EAAtC,sBAKL,ECpBYsB,EAAc,WAEzB,IAAMlE,GAAWmE,EAAAA,EAAAA,KAAY,SAACrE,GAAD,OAAWA,EAAME,SAASC,KAA1B,IACvBgB,GAASkD,EAAAA,EAAAA,KAAY,SAACrE,GAAD,OAAWA,EAAMmB,MAAjB,IAErBvC,GAAW6E,EAAAA,EAAAA,OAEjBa,EAAAA,EAAAA,YAAU,WACR1F,EAASJ,IACV,GAAE,CAACI,IAEJ,IAAM2F,EAAmBrE,EAASiB,QAAO,SAAC7B,GAAD,OACvCA,EAAQe,KAAKmE,cAAcC,SAAStD,EAAOqD,cADJ,IAInCE,EAAY,mCAAG,WAAOjE,GAAP,iEACnB,IAEE7B,EAAS4B,EAAcC,GAGxB,CAFC,MAAOS,GACPrC,QAAQC,IAAIoC,EACb,CANkB,2CAAH,sDASlB,OACE,iBAAKwC,MAAON,EAAZ,WACE,sCAEA,SAACI,EAAD,CAAQrC,OAAQA,EAAQuD,aAAcA,IAET,IAA5BH,EAAiBI,QAChB,oEAEA,eAAIjB,MAAOH,EAAX,SACGgB,EAAiBK,KAAI,SAACtF,GAAD,OACpB,SAAC2E,EAAD,CAA8B3E,QAASA,GAArBA,EAAQqB,GADN,QAO/B,EC5CYkE,EAAc,WACzB,IAAMjG,GAAW6E,EAAAA,EAAAA,MAEXqB,EAAY,mCAAG,WAAOjB,GAAP,6EACnBA,EAAEkB,iBADiB,EAEMlB,EAAEE,OAAOiB,SAA1B3E,EAFW,EAEXA,KAAMZ,EAFK,EAELA,OAERG,EAAa,CACjBS,KAAMA,EAAK2D,MACXvE,OAAQA,EAAOuE,OAGjB,IAEEpF,EAASe,EAAWC,GAGrB,CAFC,MAAOsB,GACPrC,QAAQC,IAAIoC,EACb,CAEDb,EAAK2D,MAAQ,GACbvE,EAAOuE,MAAQ,GAjBI,2CAAH,sDAoBlB,OACE,kBAAMiB,SAAUH,EAAcpB,MAAOzB,EAArC,WACA,mBAAOyB,MAAOpB,EAAd,kBAEE,kBACEoB,MAAOhB,EACPiB,KAAK,OACLtD,KAAK,OACL6E,QAAQ,yHACRC,MAAM,+IACNC,UAAQ,QAIZ,mBAAO1B,MAAOpB,EAAd,oBAEE,kBACEoB,MAAOhB,EACPiB,KAAK,MACLtD,KAAK,SAEL6E,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,QAIZ,mBAAQzB,KAAK,SAASD,MAAOb,EAA7B,2BAKH,E,UC5DYwC,EAAgB,SAAArF,GAAK,OAAIA,EAAME,SAASoF,OAAnB,ECQnB,SAASC,IACtB,IAAM3G,GAAW6E,EAAAA,EAAAA,MACXxC,GAAYoD,EAAAA,EAAAA,IAAYgB,GAM9B,OAJAf,EAAAA,EAAAA,YAAU,WACR1F,GAASJ,EAAAA,EAAAA,MACV,GAAE,CAACI,KAGF,iCACE,SAAC,KAAD,WACE,gDAEF,SAACiG,EAAD,KACA,yBAAM5D,GAAa,4BACnB,SAACmD,EAAD,MAGL,C","sources":["components/redux/contactsSlice.js","components/styles.js","components/Filter.jsx","components/contact/Contact.jsx","components/contact/ContactList.jsx","components/form/Form.jsx","redux/contacts/selectors.js","pages/Contacts.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchAll',\n  async (_, { getState, dispatch }) => {\n   \n    console.log(\"REL\", getState())\n    \n    const response = await axios.get('https://64b3a5a00efb99d862683852.mockapi.io/contacts');\n    const fetchedContacts = response.data;\n    \n    console.log(\"FETCH\", fetchedContacts)\n    \n    const uniqueContacts = fetchedContacts.reduce((acc, contact) => {\n      const existingContact = acc.find((c) => c.number === contact.number);\n      if (!existingContact) {\n        acc.push(contact);\n      }\n      return acc;\n    }, []);\n\n    return uniqueContacts;\n  }\n);\n\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (newContact, { getState }) => {\n    const phoneNumber = parsePhoneNumberFromString(newContact.number, 'UA'); \n    newContact.number = phoneNumber.formatInternational();\n\n    const state = getState();\n    // const existingContact = state.contacts.items.find(\n    //   (contact) => contact.number === newContact.number\n    //   // (contact) => contact.number === newContact.number && contact.name === newContact.name\n    // );\n    // if (existingContact) {\n    //   alert(`Contact with phone number ${newContact.number} already exists.`);\n    //   throw new Error(`Contact with phone number ${newContact.number} already exists.`);\n    // }    \n    const existingNumberContact = state.contacts.items.find(\n      (contact) => contact.number === newContact.number\n    );\n    const existingNameContact = state.contacts.items.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    if (existingNumberContact) {\n      alert(`Contact with phone number ${newContact.number} already exists.`);\n      throw new Error(`Contact with phone number ${newContact.number} already exists.`);\n    }\n\n    if (existingNameContact) {\n      alert(`Contact with name ${newContact.name} already exists.`);\n      throw new Error(`Contact with name ${newContact.name} already exists.`);\n    }\n\n\n    const response = await axios.post('https://64b3a5a00efb99d862683852.mockapi.io/contacts', newContact);\n\n    console.log(\"ADD\", response.data);\n\n    return response.data;\n  }\n);\n\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  \n  async (contactId, thunkAPI) => {\n    try {\n      const response = await axios.delete(`https://64b3a5a00efb99d862683852.mockapi.io/contacts/${contactId}`);\n      console.log(\"DELL\", response.data.id, contactId);\n      return response.data.id;\n      \n    } catch (e) {\n      console.log(\"помилка\")\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n\nconst initialState = Object.freeze({\n  contacts: {\n    items: [],\n    isLoading: false,\n    error: null\n  },\n  filter: \"\"\n});\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    setFilter: (state, action) => {\n      state.filter = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchContacts.pending, (state) => {\n        state.contacts.isLoading = true;\n        state.contacts.error = null;\n      })\n      .addCase(fetchContacts.fulfilled, (state, action) => {\n        state.contacts.isLoading = false;\n        state.contacts.items = action.payload;\n      })\n      .addCase(fetchContacts.rejected, (state, action) => {\n        state.contacts.isLoading = false;\n        state.contacts.error = action.error.message;\n      })\n      .addCase(addContact.pending, (state) => {\n        state.contacts.isLoading = true;\n        state.contacts.error = null;\n      })\n      .addCase(addContact.fulfilled, (state, action) => {\n        state.contacts.isLoading = false;\n        state.contacts.items.push(action.payload);\n        // state.contacts.items = action.payload;\n      })\n      .addCase(addContact.rejected, (state, action) => {\n        state.contacts.isLoading = false;\n        state.contacts.error = action.error.message;\n      })\n      .addCase(deleteContact.pending, (state) => {\n        state.contacts.isLoading = true;\n        state.contacts.error = null;\n      })\n      .addCase(deleteContact.fulfilled, (state, action) => {\n        state.contacts.isLoading = false;\n        state.contacts.items = state.contacts.items.filter((contact) => contact.id !== action.payload);\n      })\n      .addCase(deleteContact.rejected, (state, action) => {\n        state.contacts.isLoading = false;\n        state.contacts.error = action.error.message;\n      });\n  },\n});\n\nexport const { setFilter } = contactsSlice.actions;\n\nexport default contactsSlice.reducer;\n","export const formStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    rowGap: \"30px\",\n    marginLeft: \"80px\"\n};\n\nexport const labelStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    rowGap: \"10px\",\n    fontWeight: \"500\",\n    fontSize: \"20px\",\n    width: \"400px\"\n};\n\nexport const inputStyle = {\n    height: \"44px\",\n    width: \"400px\",\n    fontSize: \"22px\",\n    padding: \"0px 10px\"\n}\n\nexport const buttonStyle = {\n    width: \"189px\",\n    padding: \"5px\",\n    fontWeight: \"500\",\n    fontSize: \"20px\"\n}\n\nexport const btnDelStyle = {\n    fontSize: \"16px\",\n    padding: \"1px 15px\",\n    marginLeft: \"120px\",\n    marginRight: \"0\"\n}\n  \nexport const nameStyle = {\n    fontSize: \"22px\",\n    borderBottom: \"2px solid white\",\n    paddingLeft: \"0\",\n    paddingBottom: \"5px\",   \n}\n\nexport const listStyle = {\n    marginLeft: \"80px\",\n    paddingTop: \"30px\"\n  }\n\nexport const name = {   \n    textTransform: \"capitalize\",\n}\n\nexport const list = {\n    listStyle: \"none\",\n    paddingLeft: \"0px\",\n    width: \"450px\"\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from './redux/contactsSlice';\nimport { labelStyle, inputStyle } from './styles';\nimport PropTypes from 'prop-types';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const filterValue = e.target.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <label style={labelStyle}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChange}\n        style={inputStyle}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'components/redux/contactsSlice';\nimport { nameStyle, name, btnDelStyle } from 'components/styles';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = async () => {\n    try {      \n      await axios.get(`https://64b3a5a00efb99d862683852.mockapi.io/contacts/${contact.id}`);     \n      dispatch(deleteContact(contact.id));\n      console.log(\"ВИДАЛЕННЯ\", contact, contact.id )\n    } catch (error) {\n      console.error(\"Помилка\", error);\n    }\n  };\n\n  return (\n    <li style={nameStyle}>\n      <p style={name}>{contact.name} :</p>\n       {contact.number}\n      <button onClick={handleDelete} style={btnDelStyle}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from \"../redux/contactsSlice\"\nimport { Filter } from \"components/Filter\";\nimport { ContactItem } from \"./Contact\";\n// import axios from 'axios';\nimport { listStyle, list } from \"components/styles\";\n\nexport const ContactList = () => {\n  \n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.filter);\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleChange = async (contactId) => {\n    try {\n      // await axios.get(`https://64b3a5a00efb99d862683852.mockapi.io/contacts/${contactId}`);\n      dispatch(deleteContact(contactId));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div style={listStyle}>\n      <h2>Contacts</h2>\n\n      <Filter filter={filter} handleChange={handleChange} />\n\n      {filteredContacts.length === 0 ? (\n        <p>The contact list will be displayed here</p>\n      ) : (\n        <ul style={list}>\n          {filteredContacts.map((contact) => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../redux/contactsSlice';\nimport { formStyle, labelStyle, inputStyle, buttonStyle } from 'components/styles';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n\n    const newContact = {\n      name: name.value,\n      number: number.value,\n    };\n\n    try {\n      // const response = await axios.post('https://64b3a5a00efb99d862683852.mockapi.io/contacts', newContact);\n      dispatch(addContact(newContact));\n    } catch (error) {\n      console.log(error);\n    }\n\n    name.value = '';\n    number.value = '';\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={formStyle}>\n    <label style={labelStyle}>\n      Name\n      <input\n        style={inputStyle}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' :][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash, space, or colon. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </label>\n\n    <label style={labelStyle}>\n      Number\n      <input\n        style={inputStyle}\n        type=\"tel\"\n        name=\"number\"\n        // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n    </label>\n\n    <button type=\"submit\" style={buttonStyle}>\n      Add contact\n    </button>\n  </form>\n  );\n};","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { ContactList } from 'components/contact/ContactList';\nimport { ContactForm } from 'components/form/Form';\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["fetchContacts","createAsyncThunk","_","getState","dispatch","console","log","axios","response","fetchedContacts","data","uniqueContacts","reduce","acc","contact","find","c","number","push","addContact","newContact","phoneNumber","parsePhoneNumberFromString","formatInternational","state","existingNumberContact","contacts","items","existingNameContact","name","alert","Error","deleteContact","contactId","thunkAPI","id","rejectWithValue","message","initialState","Object","freeze","isLoading","error","filter","contactsSlice","createSlice","reducers","setFilter","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","formStyle","display","flexDirection","rowGap","marginLeft","labelStyle","fontWeight","fontSize","width","inputStyle","height","padding","buttonStyle","btnDelStyle","marginRight","nameStyle","borderBottom","paddingLeft","paddingBottom","listStyle","paddingTop","textTransform","list","Filter","useDispatch","style","type","onChange","e","filterValue","target","value","ContactItem","handleDelete","onClick","ContactList","useSelector","useEffect","filteredContacts","toLowerCase","includes","handleChange","length","map","ContactForm","handleSubmit","preventDefault","elements","onSubmit","pattern","title","required","selectLoading","loading","Tasks"],"sourceRoot":""}